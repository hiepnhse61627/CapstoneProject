<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <http auto-config="true" disable-url-rewriting="true" use-expressions="true">
        <intercept-url pattern="/login" access="isAnonymous()"/>
        <intercept-url pattern="/auth/**" access="isAnonymous()"/>
        <intercept-url pattern="/favicon.ico" access="isAnonymous()"/>
        <intercept-url pattern="/Resources/**" access="permitAll()"/>

        <!-- Student detail for student and api related -->
        <intercept-url pattern="/studentDetail**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_STUDENT')"/>
        <intercept-url pattern="/getStudentNextCourse**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_STUDENT')"/>
        <intercept-url pattern="/getStudentDetail**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_STUDENT')"/>

        <!-- All other links -->
        <intercept-url pattern="/" access="isAuthenticated()"/>
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>

        <form-login login-page="/login"
                    login-processing-url="/processlogin"
                    username-parameter="username"
                    password-parameter="password"
                    authentication-failure-url="/login?error"
                    default-target-url="/"/>
        <csrf disabled="true"/>
        <access-denied-handler error-page="/deny"/>

        <remember-me remember-me-parameter="remember-me"
                     remember-me-cookie="remember-me"
                     token-validity-seconds="86400"
                     data-source-ref="dataSource"/>

        <custom-filter before="PRE_AUTH_FILTER" ref="socialAuthenticationFilter"/>
    </http>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="socialAuthenticationProvider"/>
        <authentication-provider user-service-ref="customService">
            <password-encoder hash="bcrypt"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="customService" class="com.capstone.services.CustomLoginService"/>

    <beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <beans:constructor-arg value="851E6AB9C57A64C208AB7CEE232D0A45AB8B711DCA052E15EB9976994F596E368BA7BD8BBD4B8524E8B58B83CECB01EFA990C81C81E78C11627BC8B3858A1074" />
        <beans:constructor-arg ref="jdbcTokenRepository" />
        <beans:constructor-arg ref="customService" />
    </beans:bean>

    <!-- Uses a database table to maintain a set of persistent login data -->
    <beans:bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="createTableOnStartup" value="false" />
        <beans:property name="dataSource" ref="h2Source" />
    </beans:bean>

    <jdbc:embedded-database id="h2Source" type="H2">
        <jdbc:script location="WEB-INF/persistence_login.sql"/>
    </jdbc:embedded-database>

    <!-- WEB SERVER CONSOLE FOR H2 DATABASE -->
    <!--<beans:bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer" init-method="start" destroy-method="stop" depends-on="h2WebServer">-->
        <!--<beans:constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,9092"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer" init-method="start" destroy-method="stop">-->
        <!--<beans:constructor-arg value="-web,-webAllowOthers,-webPort,8082"/>-->
    <!--</beans:bean>-->

    <!-- SPRING SOCIAL SECURITY -->
    <beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver"/>
        <beans:property name="url" value="jdbc:sqlserver://localhost:58148;databaseName=CapstoneProject"/>
        <beans:property name="username" value="sa"/>
        <beans:property name="password" value="namlai120"/>
    </beans:bean>
    <beans:bean id="socialAuthenticationProvider" class="org.springframework.social.security.SocialAuthenticationProvider">
        <beans:constructor-arg ref="inMemoryUsersConnectionRepository"/>
        <beans:constructor-arg ref="socialUserDetailService"/>
    </beans:bean>
    <beans:bean id="socialAuthenticationFilter" class="org.springframework.social.security.SocialAuthenticationFilter">
        <beans:constructor-arg name="authManager" ref="authenticationManager"/>
        <beans:constructor-arg name="userIdSource" ref="userIdSource"/>
        <beans:constructor-arg name="usersConnectionRepository" ref="inMemoryUsersConnectionRepository"/>
        <beans:constructor-arg name="authServiceLocator" ref="appSocialAuthenticationServiceRegistry"/>
    </beans:bean>
    <beans:bean id="inMemoryUsersConnectionRepository" class="org.springframework.social.connect.mem.InMemoryUsersConnectionRepository">
        <beans:constructor-arg name="connectionFactoryLocator" ref="appSocialAuthenticationServiceRegistry"/>
        <beans:property name="connectionSignUp" ref="connectionSignUp"/>
    </beans:bean>
    <beans:bean id="appSocialAuthenticationServiceRegistry" class="com.capstone.registry.AppSocialAuthenticationServiceRegistry">
        <beans:constructor-arg>
            <beans:list>
                <beans:ref bean="googleAuthenticationService"/>
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>
    <beans:bean id="googleAuthenticationService"
          class="org.springframework.social.google.security.GoogleAuthenticationService">
        <beans:constructor-arg name="apiKey" value="415843400023-ksv2qa4air7u3d2tfn1ul5av2c3hjra2.apps.googleusercontent.com"/>
        <beans:constructor-arg name="appSecret" value="H0FpF5WaB9kFNNAsqDv"/>
    </beans:bean>
    <beans:bean id="socialUserDetailService" class="com.capstone.services.SocialUserDetailService"/>
    <beans:bean id="userIdSource" class="org.springframework.social.security.AuthenticationNameUserIdSource"/>
    <beans:bean id="connectionSignUp" class="com.capstone.registry.AppConnectionSignUp"/>
</beans:beans>