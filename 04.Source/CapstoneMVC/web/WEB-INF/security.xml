<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <http auto-config="true" disable-url-rewriting="true" use-expressions="true">
        <intercept-url pattern="/login" access="isAnonymous()"/>
        <intercept-url pattern="/favicon.ico" access="permitAll()"/>
        <intercept-url pattern="/Resources/**" access="permitAll()"/>

        <!-- Student detail for student and api related -->
        <intercept-url pattern="/studentDetail**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_STUDENT')"/>
        <intercept-url pattern="/getStudentNextCourse**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_STUDENT')"/>
        <intercept-url pattern="/getStudentDetail**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_STUDENT')"/>

        <intercept-url pattern="/" access="isAuthenticated()"/>

        <!-- All other links -->
        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"/>

        <form-login login-page="/login"
                    login-processing-url="/processlogin"
                    username-parameter="username"
                    password-parameter="password"
                    authentication-failure-url="/login?error"
                    default-target-url="/"/>
        <csrf disabled="true"/>
        <access-denied-handler error-page="/deny"/>

        <remember-me remember-me-parameter="remember-me"
                     remember-me-cookie="remember-me"
                     token-validity-seconds="86400"
                     data-source-ref="dataSource"/>
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="customService">
            <password-encoder hash="bcrypt"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="customService" class="com.capstone.services.CustomLoginService"/>

    <beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <beans:constructor-arg value="851E6AB9C57A64C208AB7CEE232D0A45AB8B711DCA052E15EB9976994F596E368BA7BD8BBD4B8524E8B58B83CECB01EFA990C81C81E78C11627BC8B3858A1074" />
        <beans:constructor-arg ref="jdbcTokenRepository" />
        <beans:constructor-arg ref="customService" />
    </beans:bean>

    <!-- Uses a database table to maintain a set of persistent login data -->
    <beans:bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="createTableOnStartup" value="false" />
        <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="WEB-INF/persistence_login.sql"/>
    </jdbc:embedded-database>

    <!-- WEB SERVER CONSOLE FOR H2 DATABASE -->
    <!--<beans:bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer" init-method="start" destroy-method="stop" depends-on="h2WebServer">-->
        <!--<beans:constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,9092"/>-->
    <!--</beans:bean>-->
    <!--<beans:bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer" init-method="start" destroy-method="stop">-->
        <!--<beans:constructor-arg value="-web,-webAllowOthers,-webPort,8082"/>-->
    <!--</beans:bean>-->
</beans:beans>